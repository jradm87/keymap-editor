{"ast":null,"code":"import _asyncToGenerator from\"/home/runner/work/keymap-editor/keymap-editor/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/home/runner/work/keymap-editor/keymap-editor/app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/runner/work/keymap-editor/keymap-editor/app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/runner/work/keymap-editor/keymap-editor/app/node_modules/@babel/runtime/regenerator/index.js\";import find from'lodash/find';import map from'lodash/map';import{useEffect,useMemo,useState}from'react';import github from'./api';import*as storage from'./storage';import ValidationErrors from'./ValidationErrors';import IconButton from'../../Common/IconButton';import Selector from'../../Common/Selector';import Spinner from'../../Common/Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){return/*#__PURE__*/_jsx(IconButton,{collection:\"brands\",icon:\"github\",text:\"Login with GitHub\",onClick:function onClick(){return github.beginLoginFlow();}});}function Install(){return/*#__PURE__*/_jsx(IconButton,{collection:\"brands\",icon:\"github\",text:\"Add Repository\",onClick:function onClick(){return github.beginInstallAppFlow();}});}function GithubPicker(props){var _useState=useState({initialized:false,selectedRepoId:null,selectedBranchName:null,branches:[],loadingBranches:false,loadingKeyboard:false,loadError:null,loadWarnings:null}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var initialized=state.initialized,branches=state.branches,selectedRepoId=state.selectedRepoId,selectedBranchName=state.selectedBranchName;var loadingBranches=state.loadingBranches,loadingKeyboard=state.loadingKeyboard,loadError=state.loadError,loadWarnings=state.loadWarnings;var onSelect=props.onSelect;var clearSelection=useMemo(function(){return function(){setState(function(state){return _objectSpread(_objectSpread({},state),{},{selectedBranchName:null,loadError:null,loadWarnings:null});});};},[setState]);var lintKeyboard=useMemo(function(){return function(_ref){var layout=_ref.layout;var noKeyHasPosition=layout.every(function(key){return key.row===undefined&&key.col===undefined;});if(noKeyHasPosition){setState(function(state){return _objectSpread(_objectSpread({},state),{},{loadWarnings:['Layout in info.json has no row/col definitions. Generated keymap files will not be nicely formatted.']});});}};},[setState]);var loadKeyboard=useMemo(function(){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _find;var available,repository,branch,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:available=github.repositories;repository=(_find=find(available,{id:selectedRepoId}))===null||_find===void 0?void 0:_find.full_name;branch=selectedBranchName;setState(function(state){return _objectSpread(_objectSpread({},state),{},{loadingKeyboard:true,loadError:null});});_context.next=6;return github.fetchLayoutAndKeymap(repository,branch);case 6:response=_context.sent;setState(function(state){return _objectSpread(_objectSpread({},state),{},{loadingKeyboard:false});});lintKeyboard(response);onSelect(_objectSpread({github:{repository:repository,branch:branch}},response));case 10:case\"end\":return _context.stop();}}},_callee);}));},[selectedRepoId,selectedBranchName,setState,lintKeyboard,onSelect]);useEffect(function(){github.init().then(function(){var persistedRepoId=storage.getPersistedRepository();var repositories=github.repositories||[];var selectedRepoId;if(find(repositories,{id:persistedRepoId})){selectedRepoId=persistedRepoId;}else if(repositories.length>0){selectedRepoId=repositories[0].id;}setState(function(state){return _objectSpread(_objectSpread({},state),{},{initialized:true,selectedRepoId:selectedRepoId});});});},[]);useEffect(function(){github.on('authentication-failed',function(){github.beginLoginFlow();});},[]);useEffect(function(){github.on('repo-validation-error',function(err){setState(function(state){return _objectSpread(_objectSpread({},state),{},{loadError:err,loadingKeyboard:false});});});},[]);useEffect(function(){if(!selectedRepoId){return;}storage.setPersistedRepository(selectedRepoId);_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var repository,branches,available,defaultBranch,previousBranch,onlyBranch,_loop,_i,_arr,_ret;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setState(function(state){return _objectSpread(_objectSpread({},state),{},{loadingBranches:true});});repository=find(github.repositories,{id:selectedRepoId});_context2.next=4;return github.fetchRepoBranches(repository);case 4:branches=_context2.sent;setState(function(state){return _objectSpread(_objectSpread({},state),{},{branches:branches,loadingBranches:false});});available=map(branches,'name');defaultBranch=repository.default_branch;previousBranch=storage.getPersistedBranch(selectedRepoId);onlyBranch=branches.length===1?branches[0].name:null;_loop=function _loop(){var branch=_arr[_i];if(available.includes(branch)){setState(function(state){return _objectSpread(_objectSpread({},state),{},{selectedBranchName:branch});});return\"break\";}};_i=0,_arr=[onlyBranch,previousBranch,defaultBranch];case 12:if(!(_i<_arr.length)){_context2.next=19;break;}_ret=_loop();if(!(_ret===\"break\")){_context2.next=16;break;}return _context2.abrupt(\"break\",19);case 16:_i++;_context2.next=12;break;case 19:case\"end\":return _context2.stop();}}},_callee2);}))();},[selectedRepoId]);useEffect(function(){if(!selectedRepoId||!selectedBranchName){return;}storage.setPersistedBranch(selectedRepoId,selectedBranchName);loadKeyboard();},[selectedRepoId,selectedBranchName,loadKeyboard]);if(!initialized){return null;}if(!github.isGitHubAuthorized())return/*#__PURE__*/_jsx(Login,{});if(!github.isAppInstalled())return/*#__PURE__*/_jsx(Install,{});var repositoryChoices=github.repositories.map(function(repo){return{id:repo.id,name:repo.full_name};});var branchChoices=branches.map(function(branch){return{id:branch.name,name:branch.name};});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Selector,{id:\"repo\",label:\"Repository\",value:selectedRepoId,choices:repositoryChoices,onUpdate:function onUpdate(id){return setState(function(state){return _objectSpread(_objectSpread({},state),{},{selectedRepoId:id});});}}),loadingBranches?/*#__PURE__*/_jsx(Spinner,{}):branches.length&&/*#__PURE__*/_jsx(Selector,{id:\"branch\",label:\"Branch\",value:selectedBranchName,choices:branchChoices,onUpdate:function onUpdate(name){return setState(function(state){return _objectSpread(_objectSpread({},state),{},{selectedBranchName:name});});}}),loadingKeyboard&&/*#__PURE__*/_jsx(Spinner,{}),loadError&&/*#__PURE__*/_jsx(ValidationErrors,{title:loadError.name,errors:loadError.errors,otherRepoOrBranchAvailable:repositoryChoices.length>1||branchChoices.length>0,onDismiss:clearSelection}),loadWarnings&&/*#__PURE__*/_jsx(ValidationErrors,{title:\"Warning\",errors:loadWarnings,onDismiss:function onDismiss(){return setState(function(state){return _objectSpread(_objectSpread({},state),{},{loadWarnings:null});});}}),selectedBranchName&&!loadingKeyboard&&/*#__PURE__*/_jsx(IconButton,{icon:\"sync\",onClick:loadKeyboard})]});}export default GithubPicker;","map":{"version":3,"names":["find","map","useEffect","useMemo","useState","github","storage","ValidationErrors","IconButton","Selector","Spinner","Login","beginLoginFlow","Install","beginInstallAppFlow","GithubPicker","props","initialized","selectedRepoId","selectedBranchName","branches","loadingBranches","loadingKeyboard","loadError","loadWarnings","state","setState","onSelect","clearSelection","lintKeyboard","layout","noKeyHasPosition","every","key","row","undefined","col","loadKeyboard","available","repositories","repository","id","full_name","branch","fetchLayoutAndKeymap","response","init","then","persistedRepoId","getPersistedRepository","length","on","err","setPersistedRepository","fetchRepoBranches","defaultBranch","default_branch","previousBranch","getPersistedBranch","onlyBranch","name","includes","setPersistedBranch","isGitHubAuthorized","isAppInstalled","repositoryChoices","repo","branchChoices","errors"],"sources":["/home/runner/work/keymap-editor/keymap-editor/app/src/Pickers/Github/Picker.js"],"sourcesContent":["import find from 'lodash/find'\nimport map from 'lodash/map'\nimport { useEffect, useMemo, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport github from './api'\nimport * as storage from './storage'\nimport ValidationErrors from './ValidationErrors'\n\nimport IconButton from '../../Common/IconButton'\nimport Selector from '../../Common/Selector'\nimport Spinner from '../../Common/Spinner'\n\nfunction Login() {\n  return (\n    <IconButton\n      collection=\"brands\"\n      icon=\"github\"\n      text=\"Login with GitHub\"\n      onClick={() => github.beginLoginFlow()}\n    />\n  )\n}\n\nfunction Install() {\n  return (\n    <IconButton\n      collection=\"brands\"\n      icon=\"github\"\n      text=\"Add Repository\"\n      onClick={() => github.beginInstallAppFlow()}\n    />\n  )\n}\n\nfunction GithubPicker(props) {\n  const [state, setState] = useState({\n    initialized: false,\n    selectedRepoId: null,\n    selectedBranchName: null,\n    branches: [],\n    loadingBranches: false,\n    loadingKeyboard: false,\n    loadError: null,\n    loadWarnings: null\n  })\n\n  const { initialized, branches, selectedRepoId, selectedBranchName } = state\n  const { loadingBranches, loadingKeyboard, loadError, loadWarnings } = state\n\n  const { onSelect } = props\n\n  const clearSelection = useMemo(() => function () {\n    setState(state => ({\n      ...state,\n      selectedBranchName: null,\n      loadError: null,\n      loadWarnings: null\n    }))\n  }, [setState])\n\n  const lintKeyboard = useMemo(() => function ({ layout }) {\n    const noKeyHasPosition = layout.every(key => (\n      key.row === undefined &&\n      key.col === undefined\n    ))\n\n    if (noKeyHasPosition) {\n      setState(state => ({ ...state, loadWarnings: [\n        'Layout in info.json has no row/col definitions. Generated keymap files will not be nicely formatted.'\n      ]}))\n    }\n  }, [setState])\n\n  const loadKeyboard = useMemo(() => async function () {\n    const available = github.repositories\n    const repository = find(available, { id: selectedRepoId })?.full_name\n    const branch = selectedBranchName\n\n    setState(state => ({ ...state, loadingKeyboard: true, loadError: null }))\n\n    const response = await github.fetchLayoutAndKeymap(repository, branch)\n\n    setState(state => ({ ...state, loadingKeyboard: false }))\n    lintKeyboard(response)\n\n    onSelect({\n      github: { repository, branch },\n      ...response\n    })\n  }, [\n    selectedRepoId,\n    selectedBranchName,\n    setState,\n    lintKeyboard,\n    onSelect\n  ])\n\n  useEffect(() => {\n    github.init().then(() => {\n      const persistedRepoId = storage.getPersistedRepository()\n      const repositories = github.repositories || []\n      let selectedRepoId\n\n      if (find(repositories, { id: persistedRepoId })) {\n        selectedRepoId = persistedRepoId\n      } else if (repositories.length > 0) {\n        selectedRepoId = repositories[0].id\n      }\n\n      setState(state => ({\n        ...state,\n        initialized: true,\n        selectedRepoId\n      }))\n    })\n  }, [])\n\n  useEffect(() => {\n    github.on('authentication-failed', () => {\n      github.beginLoginFlow()\n    })\n  }, [])\n\n  useEffect(() => {\n    github.on('repo-validation-error', err => {\n      setState(state => ({\n        ...state,\n        loadError: err,\n        loadingKeyboard: false\n      }))\n    })\n  }, [])\n\n  useEffect(() => {\n    if (!selectedRepoId) {\n      return\n    }\n\n    storage.setPersistedRepository(selectedRepoId)\n\n    ;(async function() {\n      setState(state => ({ ...state, loadingBranches: true }))\n\n      const repository = find(github.repositories, { id: selectedRepoId })\n      const branches = await github.fetchRepoBranches(repository)\n\n      setState(state => ({ ...state, branches, loadingBranches: false }))\n\n      const available = map(branches, 'name')\n      const defaultBranch = repository.default_branch\n      const previousBranch = storage.getPersistedBranch(selectedRepoId)\n      const onlyBranch = branches.length === 1 ? branches[0].name : null\n\n      for (let branch of [onlyBranch, previousBranch, defaultBranch]) {\n        if (available.includes(branch)) {\n          setState(state => ({ ...state, selectedBranchName: branch }))\n          break\n        }\n      }\n    })()\n  }, [selectedRepoId])\n\n  useEffect(() => {\n    if (!selectedRepoId || !selectedBranchName) {\n      return\n    }\n\n    storage.setPersistedBranch(selectedRepoId, selectedBranchName)\n    loadKeyboard()\n  }, [selectedRepoId, selectedBranchName, loadKeyboard])\n\n  if (!initialized) {\n    return null\n  }\n\n  if (!github.isGitHubAuthorized()) return <Login />\n  if (!github.isAppInstalled()) return <Install />\n\n  const repositoryChoices = github.repositories.map(repo => ({\n    id: repo.id,\n    name: repo.full_name\n  }))\n\n  const branchChoices = branches.map(branch => ({\n    id: branch.name,\n    name: branch.name\n  }))\n\n  return (\n    <>\n      <Selector\n        id=\"repo\"\n        label=\"Repository\"\n        value={selectedRepoId}\n        choices={repositoryChoices}\n        onUpdate={id => setState(state => ({\n          ...state,\n          selectedRepoId: id\n        }))}\n      />\n\n      {loadingBranches ? (\n        <Spinner />\n      ) : branches.length && (\n        <Selector\n          id=\"branch\"\n          label=\"Branch\"\n          value={selectedBranchName}\n          choices={branchChoices}\n          onUpdate={name => setState(state => ({\n            ...state,\n            selectedBranchName: name\n          }))}\n        />\n      )}\n\n      {loadingKeyboard && <Spinner />}\n\n      {loadError && (\n        <ValidationErrors\n          title={loadError.name}\n          errors={loadError.errors}\n          otherRepoOrBranchAvailable={\n            repositoryChoices.length > 1\n            || branchChoices.length > 0\n          }\n          onDismiss={clearSelection}\n        />\n      )}\n      {loadWarnings && (\n        <ValidationErrors\n          title=\"Warning\"\n          errors={loadWarnings}\n          onDismiss={() => setState(state => ({ ...state, loadWarnings: null }))}\n        />\n      )}\n\n      {selectedBranchName && !loadingKeyboard && (\n        <IconButton icon=\"sync\" onClick={loadKeyboard} />\n      )}\n    </>\n  )\n}\n\nGithubPicker.propTypes = {\n  onSelect: PropTypes.func.isRequired\n}\n\nexport default GithubPicker\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}